on:
  push:
    branches:
      - release
name: Build and Release
jobs:
  pre-commit:
    name: Run Pre-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: pre-commit/action@v3.0.0
  test:
    name: Run Test cases
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.0.5"
          channel: "stable"
      - run: flutter --version
      - run: flutter pub get
      - run: flutter test
  version:
    name: Versioning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: codfish/semantic-release-action@master
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo ${{ steps.semantic.outputs.release-version }}
      - env:
          OUTPUTS: ${{ toJson(steps.semantic.outputs) }}
  build:
    if: steps.semantic.outputs.new-release-published == 'true'
    runs-on: ubuntu-latest
    name: Build app
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          channel: "stable"
          distribution: "zulu"
          java-version: "11"
          release-version: ${{ steps.semantic.outputs.release-version }}
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.0.5"
      - run: flutter --version
      - run: flutter pub get
      - run: flutter build apk --split-per-abi --no-shrink --build-name={{release-version}}
      - run: flutter pub get
      - run: flutter build appbundle
  github_release:
    if: steps.semantic.outputs.new-release-published == 'true'
    runs-on: ubuntu-latest
    name: Release on github
    steps:
      - uses: ncipollo/release-action@v1
        with:
          release-version: ${{ steps.semantic.outputs.release-version }}
          prerelease: true
          name: msm-v{{release-version}}
          artifacts: "build/app/outputs/apk/release/*.apk"
          bodyFile: "CHANGELOG.md"
          token: ${{ secrets.TOKEN }}
